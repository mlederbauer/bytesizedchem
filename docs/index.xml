<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>bytesizedchem</title>
<link>https://bytesizedchem.com/</link>
<atom:link href="https://bytesizedchem.com/index.xml" rel="self" type="application/rss+xml"/>
<description>A Digital Chemistry Atlas</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Wed, 10 Jul 2024 22:00:00 GMT</lastBuildDate>
<item>
  <title>Chem Bit #2: A Shortcut That Saves You Loads Of Time</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-07-11_ChemBit2-LaTeX-shortcut/</link>
  <description><![CDATA[ 





<p>Hello there! I am writing a lot of reports, applications and text in LaTeX right now, and there is one tag that has caused me headache for the past years:</p>
<pre><code>\ce{}</code></pre>
<p>The chemical equation command by the usepackage <code>mhchem</code>. It is not math mode, making your text automatically be weirdly <em>tiltedandsquishedtogether</em>, it automatically recognizes ‚Çõ·µ§b- and À¢·µò·µñ·µâ ≥script. It is everything for keeping me sane when describing molecules‚Äô sum formulae and salts.</p>
<p>The Problem?</p>
<p>While I can mark text with my cursor and simply hit <code>Cmd+B</code> and make every text bold, while I can highlight, hit <code>$</code> and transform a line of math into math-mode like a breeze ‚Äì is a pain to insert this <code>\ce{}</code> tag</p>
<p>One day, I got too annoyed and searched for a shortcut for this. With success!!</p>
<p>Let me introduce you to <a href="https://chromewebstore.google.com/detail/shortleaf/hmkemgnhfglmggklpfodjgkabaicchjn">Shortleaf</a>, a Google Chrome extension that lets you create your own Overleaf shortcuts. For literally anything.</p>
<p>I found out about it in a reddit post (I can‚Äôt find anymore ü•≤) and downloaded it from the <a href="https://chromewebstore.google.com/detail/shortleaf/hmkemgnhfglmggklpfodjgkabaicchjn">Google Chrome extension store</a>. <a href="https://github.com/andre-al/shortleaf">This is the repo</a> you can look at (or star, as the author ‚Äì Andre Alcantara ‚Äì, has done such a good job), and this is the custom command you can add*:</p>
<p><img src="https://bytesizedchem.com/posts/24-07-11_ChemBit2-LaTeX-shortcut/images/shortcut.png" class="img-fluid"></p>
<p>(Another useful command if you are using the LuaLaTeX compiler: ‚ú®‚ú®)</p>
<p><img src="https://bytesizedchem.com/posts/24-07-11_ChemBit2-LaTeX-shortcut/images/sparkle.png" class="img-fluid"></p>
<p>With Cmd+E, you can now insert at your free will, or mark any text to transform it into a beautiful ~sulfuric acid~ or ~isotopomer of ¬π‚Å¥C¬π‚Å∏O~. No hassle involved anymore. Needless to say, it only works on Overleaf at the moment.</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="images/new.mp4"></video></div>
<p>I sincerely hope it is turning out as useful to you as it did for me. Please give Andre‚Äôs (<a href="https://x.com/andre_alc_"><span class="citation" data-cites="andre_alc_">@andre_alc_</span></a> on Twitter) repo a star or his post a ‚ù§Ô∏è if you benefit from it. Supporters supporting supporters!</p>
<p>Until next time üëãüëã</p>
<p>* Chrome Extensions ‚Üí Shortleaf ‚Üí Extension options ‚Üí Commands</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Subscribe <a href="https://bytesizedchem.substack.com/subscribe">here</a> to stay updated on coming posts.</p>
</div>
</div>



 ]]></description>
  <category>chem-bit</category>
  <category>writing</category>
  <guid>https://bytesizedchem.com/posts/24-07-11_ChemBit2-LaTeX-shortcut/</guid>
  <pubDate>Wed, 10 Jul 2024 22:00:00 GMT</pubDate>
  <media:content url="https://bytesizedchem.com/posts/24-07-11_ChemBit2-LaTeX-shortcut/images/image.png" medium="image" type="image/png" height="98" width="144"/>
</item>
<item>
  <title>Chem Bit #1: Sunburst Charts</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/</link>
  <description><![CDATA[ 





<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Subscribe <a href="https://bytesizedchem.substack.com/subscribe">here</a> to stay updated on coming posts.</p>
</div>
</div>
<p>Imagine you‚Äôre curious about a dataset you created and curated. So much work! And now you get to present it in front of a crowd, or write it down in a report. How To Do?!</p>
<p>Say: You have a list of catalyst supports and know that each plays a part in a ‚Äúlarger‚Äù class of reactions‚Äîlike characters in a play. For example, graphene being a carbon support (or, a bunch of organic chemistry reactions that can broadly be catergorized into higher-level sections such as carbonyl chemistry, radical chemistry, ‚Ä¶ etc.). Conveniently, for example, you created a dictionary mapping a support to a cluster.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your hand-(or machine-)made dictionary assigning each support to a cluster</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">cluster_dictionary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alumina"</span>: [ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m-Al2O3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zeolite HZSM-5"</span>],</span>
<span id="cb1-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"carbon"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"carbon nanofibers"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mesoporous polymeric graphitic carbon nitride (mpg-C3N4)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nitrogen-doped graphene"</span>],</span>
<span id="cb1-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ceria"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CeO2"</span>],</span>
<span id="cb1-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Au"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fe2O3"</span>]</span>
<span id="cb1-8">}</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Could also be something like</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cluster_dictionary = {</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "radical chemistry": ["hydrochlorination", "alpha-elimination"],</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "carbonyl chemistry": ["transesterification", "carbonyl reduction"],</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... }</span></span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your example data</span></span>
<span id="cb2-2">example_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m-Al2O3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CeO2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nitrogen-doped graphene'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nitrogen-doped graphene'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m-Al2O3'</span>]</span></code></pre></div>
<p>After some preprocessing, your data might look like this (see below for a data preprocessing tutorial):</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> data_df</span>
<span id="cb3-2">                      Item  Cluster  Count</span>
<span id="cb3-3"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                  m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Al2O3  alumina      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-4"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                     CeO2    ceria      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-5"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>        carbon nanofibers   carbon      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-6"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  nitrogen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>doped graphene   carbon      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
<p>How do you organize this ‚Äúcast‚Äù of characters without overwhelming the viewer or crowding the plot? How do we visualize this ‚Äì Perhaps with a histogram? Coloring each bar according to their cluster assignment?</p>
<center>
<img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/all_supports_histogram.png" class="img-fluid">
</center>
<p><em>Histogram of ‚Äúmy‚Äù data (larger than the example), corresponding to catalyst supports that belong to a specific super-cluster.</em></p>
<p>That looks, ehh, ugly‚Ä¶ let‚Äôs ‚Äúprettify‚Äù this figure.</p>
<p>We will use‚Ä¶ a sunburst chart! It is a way of visualizing hierarchical data, or data belonging to multiple categories. Each ‚Äúonion shell‚Äù of the plot corresponds to a specific category. In our case, the middle corresponds to the clusters, the bottom to the individual datapoints:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create sunburst chart</span></span>
<span id="cb4-4">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.sunburst(</span>
<span id="cb4-5">    data_df,</span>
<span id="cb4-6">    path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Item"</span>],</span>
<span id="cb4-7">    values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>,</span>
<span id="cb4-8">    title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Catalyst Supports"</span>,</span>
<span id="cb4-9">)</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the figure</span></span>
<span id="cb4-12">fig.write_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_first_sunburst.png"</span>)</span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can also take a look instantly with fig.show()</span></span></code></pre></div>
<center>
<img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/my_first_sunburst_1.png" class="img-fluid">
</center>
<p><em>Your first sunburst chart. Woohoo! With the default layout, though.</em></p>
<p>Nice, right? However, we‚Äôre kinda loosing track of the count of datapoints along the way. Let‚Äôs fix this by displaying it in the Cluster Label:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include the number of data points right in the cluster label</span></span>
<span id="cb5-2">cluster_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb5-3">data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster_With_Counts"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cluster_counts[x]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add to sunburst chart</span></span>
<span id="cb5-6">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.sunburst(</span>
<span id="cb5-7">    ...</span>
<span id="cb5-8">    path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster_With_Counts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Item"</span>],</span>
<span id="cb5-9">    ...</span>
<span id="cb5-10">)</span>
<span id="cb5-11"></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the figure</span></span>
<span id="cb5-13">fig.write_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_first_sunburst.png"</span>)</span></code></pre></div>
<center>
<img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/my_first_sunburst_2.png" class="img-fluid">
</center>
<p><em>Customization Step 1: Adding the counts</em></p>
<p>Lastly, I like an aesthetic color scheme and LARGE text sizes, so let‚Äôs add that by modifying your favorite seaborn color palette (you can also assign individual colors, see documentation):</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the number of unique clusters for our color palette</span></span>
<span id="cb6-2">unique_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>].nunique()</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Palette from Seaborn to color each cluster</span></span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb6-6">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.color_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magma"</span>, unique_clusters)</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Link our clusters to the Magma colors</span></span>
<span id="cb6-9">color_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cluster: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rgb(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> cluster, (r, g, b) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>].unique(), colors)}</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add to sunburst chart</span></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add to sunburst chart</span></span>
<span id="cb6-13">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.sunburst(</span>
<span id="cb6-14">    ...</span>
<span id="cb6-15">    color_discrete_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_map,</span>
<span id="cb6-16">    ...</span>
<span id="cb6-17">)</span>
<span id="cb6-18"></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply larger fontsize</span></span>
<span id="cb6-20">fig.update_layout(font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the figure</span></span>
<span id="cb6-23">fig.write_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_first_sunburst.png"</span>)</span></code></pre></div>
<center>
<img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/my_first_sunburst_3.png" class="img-fluid">
</center>
<p><em>Customization Step 2: Custom color scheme</em></p>
<p>Giving us this function (please use docstrings and typehints, folks!):</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_sunburst_chart(data_df: pd.DataFrame, filename: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate a sunburst chart using a discrete Magma color scheme from Seaborn.</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        data_df (pd.DataFrame): DataFrame containing "Item", "Cluster", and "Count".</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        None, displays the chart.</span></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the number of unique clusters</span></span>
<span id="cb7-16">    unique_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>].nunique()</span>
<span id="cb7-17"></span>
<span id="cb7-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of colors from the Magma palette</span></span>
<span id="cb7-19">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.color_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magma"</span>, unique_clusters)</span>
<span id="cb7-20"></span>
<span id="cb7-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a color map linking clusters to colors</span></span>
<span id="cb7-22">    color_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cluster: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rgb(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> cluster, (r, g, b) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cluster'</span>].unique(), colors)}</span>
<span id="cb7-23"></span>
<span id="cb7-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Aggregate count by cluster</span></span>
<span id="cb7-25">    cluster_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb7-26"></span>
<span id="cb7-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update cluster names in the DataFrame to include the count</span></span>
<span id="cb7-28">    data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster_With_Counts"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cluster_counts[x]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb7-29"></span>
<span id="cb7-30"></span>
<span id="cb7-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting with Plotly</span></span>
<span id="cb7-32">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.sunburst(</span>
<span id="cb7-33">        data_df,</span>
<span id="cb7-34">        path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster_With_Counts"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Item"</span>],</span>
<span id="cb7-35">        values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>,</span>
<span id="cb7-36">        title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Catalyst Support Clustering"</span>,</span>
<span id="cb7-37">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Can also be assigned according to 'Count' or another column; in that case set a continuous color_map</span></span>
<span id="cb7-38">        color_discrete_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_map</span>
<span id="cb7-39">    )</span>
<span id="cb7-40">    fig.update_layout(font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb7-41">    fig.savefig(filename) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># can be png or svg</span></span></code></pre></div>
Et voil√†, you created your own sunburst chart that might help to visualize your hierarchical dataset better! Nice! The nice thing about using a small ‚Äúdummy‚Äù dataset that corresponds to your use case is that you can nicely distinguish Used on my own data, we obtain something that looks like this:
<center>
<img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/all_supports_sunburst.png" class="img-fluid">
</center>
<p>Looks better than the histogram before, right?</p>
<center>
<div style="display: flex; align-items: flex-start;">
<p><img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/all_supports_histogram.png" alt="Image 1" style="height: 300px; margin-right: 10px;"> <img src="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/all_supports_sunburst.png" alt="Image 2" style="height: 300px;"></p>
</div>
<em>Please say ‚Äúyes‚Äù.</em>
</center>
<p>There are many ways to customize these charts further. For example, I can add ‚Äúintermediate‚Äù clusters such as titanium oxide (TiO2), titanium nitride and titanium carbide, to segment the data further. We can also see at once that the carbon supports is highly represented in the dataset with 32 entries ‚Äî whereas MoS2 or SiC only constitute 1 datapoint each. So, I probably know to be critical when my machine learning model exclusively predicts ‚Äúcarbon‚Äù in the majority of cases. Anyway!</p>
<p>See here for further customization:</p>
<ul>
<li><a href="https://plotly.com/python/sunburst-charts/">Generating Sunburst Charts with Plotly</a></li>
<li><a href="https://seaborn.pydata.org/tutorial/color_palettes.html">Color Palettes by Seaborn</a></li>
<li><a href="https://inkscape.org/">Inkscape for visualizing and editing vector graphics</a></li>
</ul>
<p>Until the next time! üëãüëã</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Subscribe <a href="https://bytesizedchem.substack.com/subscribe">here</a> to stay updated on coming posts.</p>
</div>
</div>
<details>
<summary>
P.S.: If your data is contained in a different format: data preprocessing‚Ä¶ The least fun part.
</summary>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your hand-(or machine-)made dictionary assigning each support to a cluster</span></span>
<span id="cb8-2">cluster_dictionary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb8-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alumina"</span>: [ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m-Al2O3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zeolite HZSM-5"</span>],</span>
<span id="cb8-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"carbon"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"carbon nanofibers"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mesoporous polymeric graphitic carbon nitride (mpg-C3N4)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nitrogen-doped graphene"</span>],</span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ceria"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CeO2"</span>],</span>
<span id="cb8-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Au"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fe2O3"</span>]</span>
<span id="cb8-7">}</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Could also be something like</span></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cluster_dictionary = {</span></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "radical chemistry": ["hydrochlorination", "alpha-elimination"],</span></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "carbonyl chemistry": ["transesterification", "carbonyl reduction"],</span></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... }</span></span></code></pre></div>
<p>Say, our dataset contains all of the supports in the dataset, multiple times.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> example_data</span>
<span id="cb9-2">[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m-Al2O3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CeO2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nitrogen-doped graphene'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nitrogen-doped graphene'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m-Al2O3'</span>]</span></code></pre></div>
<p>Construct the dataframe with this code:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">item_assigned_to_cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item: cluster <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> cluster, items <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cluster_dictionary.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> items}</span></code></pre></div>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> item_assigned_to_cluster</span>
<span id="cb11-2">{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m-Al2O3'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alumina'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zeolite HZSM-5'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alumina'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon nanofibers'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mesoporous polymeric graphitic carbon nitride (mpg-C3N4)'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nitrogen-doped graphene'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'carbon'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CeO2'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ceria'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Au'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'other'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Fe2O3'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'other'</span>}</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame for plotting</span></span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb12-3">data_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb12-4">{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Item"</span>: example_data, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster"</span>: [item_assigned_to_cluster.get(item, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> example_data]}</span>
<span id="cb12-5">)</span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the frequency of each item</span></span>
<span id="cb12-8">data_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Count'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Item'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Item'</span>].transform(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'count'</span>)</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop duplicates to avoid counting items multiple times</span></span>
<span id="cb12-11">data_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_df.drop_duplicates(subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Item'</span>])</span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">Our dataframe now looks like this:</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> data_df</span>
<span id="cb13-4">                      Item  Cluster  Count</span>
<span id="cb13-5"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                  m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Al2O3  alumina      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb13-6"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                     CeO2    ceria      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-7"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>        carbon nanofibers   carbon      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb13-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  nitrogen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>doped graphene   carbon      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</details>



 ]]></description>
  <category>chem-bit</category>
  <category>code</category>
  <category>visualization</category>
  <guid>https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/</guid>
  <pubDate>Wed, 03 Jul 2024 22:00:00 GMT</pubDate>
  <media:content url="https://bytesizedchem.com/posts/24-07-04_ChemBit1-Sunburst-Charts/images/all_supports_sunburst.png" medium="image" type="image/png" height="141" width="144"/>
</item>
<item>
  <title>Learnings from My First International Conference</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-06-01_First-Conference/</link>
  <description><![CDATA[ 





<p><em>Exactly one month ago, I attended my very first international conference. What I learnt: Embrace to network, set specific goals, the art of following up. A regard-en-arri√®re.</em></p>
<p><strong><em>‚ÄúByteSizedChemistry‚Äù</em></strong> was born during some conversations over cocktails and the skyline of Heidelberg. I spoke with colleagues, and we encouraged each other to share our passion for chemistry with the public through a blog and YouTube channel‚Äîsome of whom are now some of the first subscribers of the blog‚Äîhi!</p>
<p>I printed and packed my poster, caught the train, and arrived in Heidelberg eight hours later filled with expectations and curiosity (and a bit of uncertainty). Four days later I can say: <strong>I am now fully convinced that next to collaborating with others and the pleasure of finding things out</strong> (Feynman reference intended)<strong>, scientific conferences are the cr√®me de la cr√®me of ‚Äúacademic life‚Äù</strong>. And why you should definitely ‚Äì even as a young undergraduate or graduate student ‚Äì consider them indispensable.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-01_First-Conference/images/ccsc.jpg" class="img-fluid"> <em>A small snippet of chemical compound space: The attendees‚Äô favorite molecules. I contributed N-methylimidazole and beta-carotene ü•ï. Some transition metal complexe made it in there, too ‚Äì over 10^60 (!) more to explore!</em></p>
<section id="why-conferences" class="level2">
<h2 class="anchored" data-anchor-id="why-conferences">Why Conferences?</h2>
<p>Next to the ‚Äúacademic‚Äù lab‚Äù, as we know it, there are several occasions and situations where the progression of science occurs. Workshops, Hackathons, Project presentations of lectures, coffee rooms (largely underestimated!). Conferences are an amazing occasion to meet people outside of your research group, university or thematic bubble. You have the possibility to be sent by a group, but also join one yourself (<em>I have a note on that at the end of the article, see here [1]</em>).</p>
<p>When I saw an advertisment for taking part in the Chemical Compound Space Conference (CCSC) 2024, focusing on Quantum Machine Learning and discovering new molecules and materials on a large scale, I was instantly ‚Äúhooked‚Äù and eager to be part of it.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-01_First-Conference/images/locals.jpeg" class="img-fluid"> <em>Conferences are also the perfect occasion to try out cuisines and local caf√©s. CCSC also provided us with fantastic refreshing beverages.</em></p>
</section>
<section id="your-studies-are-useful" class="level2">
<h2 class="anchored" data-anchor-id="your-studies-are-useful">Your Studies Are Useful ü§Ø</h2>
<p>I am currently in the stage between ‚Äúfinishing the last lectures and exams‚Äù of my master‚Äôs and ‚Äúexecuting the first real research projects‚Äù ‚Äì from start to finish, half-time or full-time for a few months, where the answer is not known</p>
<p>I took the course Quantum Chemistry this semester, introducing and deepening concepts in first-principle methods and Density Functional Theory (DFT); methods that I‚Äôve used, and now understand closer. Terms like <em>CCSD(T), GIAO, def2, ZORA, ‚Ä¶</em> now make sense to me. Some aspects, such as niche-sque name reactions or notations for defects in crystal systems, might fade over time, concepts stay. (It is great to be a chemist who always ‚Äúspeaks in‚Äù concepts and models.)</p>
<p>Similarly, reactions of catalytic interest (organometallics, zeolites, biochemistry) are familiar to me, and it is FUN to ‚Äúrediscover‚Äù them in ‚Äúreal life‚Äù! ‚Äì Much better than Anki suggesting it to you through its algorithm for the tenth time.</p>
</section>
<section id="embrace-networking" class="level2">
<h2 class="anchored" data-anchor-id="embrace-networking">Embrace ‚ú®Networking‚ú®</h2>
<p>Even though I stressed the importance of listening to talks and contributions in the last point, some people told me that <em>networking</em> holds the true value of scientific conferences. I can highly recommend to take a look at ‚ÄúNetworking for Nerds‚Äù, a book highlighting how you can benefit from longlasting professional connections. It is freely accessible for university students and shares AMAZINGLY VALUABLE lessons. I‚Äôve been re-reading it recently. Networking is an essential part of being a scientist, it can be fun and immensely valuable. Check it out <a href="https://onlinelibrary.wiley.com/doi/book/10.1002/9781118663653">here</a> (also available on Amazon <a href="https://www.amazon.com/Networking-Nerds-Game-Changing-Opportunities-Everywhere/dp/1118663586">here</a>).</p>
<p><img src="https://bytesizedchem.com/posts/24-06-01_First-Conference/images/schedule.jpg" class="img-fluid"> <em>A packed schedule ‚Äì nonetheless plenty of coffee and lunch breaks to get to know the other attendees ‚Äì who are much more similar to you than you think!</em></p>
</section>
<section id="how-to-build-an-award-winning-poster" class="level2">
<h2 class="anchored" data-anchor-id="how-to-build-an-award-winning-poster">How To Build An Award-Winning Poster üåÅ</h2>
<p>The creation of a scientific poster can be divisive: some love it, others dread it. However, never underestimate the impact a well-crafted poster (and presentation) can have. My own poster session led to enriching conversations and, excitingly, the first poster prize! This recognition was not just an honor, but a testament to the potential impact of even ‚Äòsmall‚Äô master‚Äôs projects.</p>
<p>I took inspiration from many awesome resources on the internet, among others <a href="https://www.animateyour.science/post/how-to-design-an-award-winning-conference-poster">How To Design an Award Winning Conference Poster</a>.</p>
<p>Creating your poster is a creative process that hones your graphic design, public speaking (and time managment ‚Äì printer shops are closed on Sunday!) skills. <a href="">Inkscape</a> is my favorite platform for designing graphics, PowerPoint for creating them. <em>I will write more about this in an upcoming post, WIP</em></p>
</section>
<section id="set-yourself-up-for-a-challenge-the-power-of-following-up" class="level2">
<h2 class="anchored" data-anchor-id="set-yourself-up-for-a-challenge-the-power-of-following-up">Set Yourself Up For A Challenge: The Power of Following Up üñãÔ∏è</h2>
<p>Following up post-conference is as crucial as the interactions during the event. Whether it‚Äôs applying a new calculation method discussed or revisiting a suggestion from a fellow attendee, these efforts solidify connections and can lead to future collaborations. Don‚Äôt hesitate to reach out post-conference; a simple message can open doors to new opportunities (and friendships). LinkedIn is your friend.</p>
<p>This is challenging, as the semester always is busy and the task list long (this is also an immense issue for hackathon projects, by the way ‚Äî <em>I will write more about this in an upcoming post, WIP</em>).</p>
</section>
<section id="im-an-undergraduate-or-master-student-so-where-do-i-start" class="level2">
<h2 class="anchored" data-anchor-id="im-an-undergraduate-or-master-student-so-where-do-i-start">I‚Äôm An Undergraduate or Master Student So Where Do I Start? üê£</h2>
<p>[1] If you ticked ‚ÄúNone yet‚Äù in the first poll, this paragraph is for you!</p>
<p>If you‚Äôre considering attending your first conference and haven‚Äôt yet done so, start by exploring local or national meetings related to your field. My academic upbringing took place in Switzerland, which is a small, innovative, very interconnected country. There, for example, the Swiss Chemical Society Fall Meeting provides an accessible platform for young chemists to engage with the community. Membership often includes discounted conference fees, making it a cost-effective way to expand your network (the membership fee is 50 CHF per year for students ‚Äì so is the entry fee for the single conference). If you sign up straightaway, you could benefit from other activities of the society, such as company visits or smaller schools. National and international {chemist/scientist} societies are amazing for building your aforementioned network.</p>
<p>Find out more about conferences in the form of a regularly updated conference database <a href="https://supersciencegrl.co.uk/conferences">here</a>.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-01_First-Conference/images/banner.jpg" class="img-fluid"> <em>Banner of the 2023 SCS Fall Meeting in Bern. This year, it takes place in Fribourg, Switzerland. Other national societies provide similar meetings (for young students as well!), too!</em></p>
<p>In summary, my learnings from the conference are clear: conferences are invaluable, though they can also be exhausting; never fear networking; and consider starting a science communication blog‚Äîbecause your field is fascinating! (And stick to posting regularly, as well.) <strong>It is about enjoying the process, soaking up the atmosphere.</strong> If you have any thoughts or experiences to share, please leave them in the comments or write us at BSC. Thanks for reading and sharing. <strong><em>See you at the next conference!</em></strong></p>


</section>

 ]]></description>
  <category>student-life</category>
  <guid>https://bytesizedchem.com/posts/24-06-01_First-Conference/</guid>
  <pubDate>Fri, 28 Jun 2024 22:00:00 GMT</pubDate>
  <media:content url="https://bytesizedchem.com/posts/24-06-01_First-Conference/images/ccsc.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ad Astra</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/</link>
  <description><![CDATA[ 





<p><em>An der j√§hrlichen ‚ÄúThanks Giving‚Äù-Veranstaltung der ETH Foundation pr√§sentieren junge Forschende und Entrepreneurs ihre Arbeit vor den Donatoren. Ich hatte die Ehre, zur 2024 Edition eingeladen zu werden und einen Teil meiner aktuellen Forschung vorzustellen. Eine Abschrift meines Vortrags.</em></p>
<p>Guten Abend, meine Damen und Herren. Es ist mir eine gro√üe Freude, Ihnen heute einen Teil meiner <strong>Forschung und Leidenschaft</strong>, die digitale Chemie, n√§herzubringen.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide1.png" class="img-fluid"> <em>Matterhorn bei Nacht. Bild von <a href="https://unsplash.com/@explorewithjoshua?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Explore with Joshua</a> auf <a href="https://unsplash.com/photos/snow-covered-mountain-under-blue-sky-during-night-time-4yBogrmcEmM?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash</a>.</em></p>
<p>Die Chemie, wie wir sie kennen, ist ein unglaublich weitl√§ufiges Gebiet, das in <strong>jeden Bereich unseres Lebens</strong> reicht. Wir sprechen von der Entwicklung neuer Medikamente und erneuerbarer Energien bis hin zu Materialien f√ºr die Elektronik, die es mir erm√∂glichen, diese Pr√§sentation vor Ihnen zu projizieren. Ebenso gibt es eine enorme Anzahl an m√∂glichen Materialien und Molek√ºlen, die wir herstellen k√∂nnen: Stellen Sie sich vor, das Universum der Chemie ist so weitl√§ufig wie der <strong>Nachthimmel</strong> √ºber uns. Es gibt viel mehr Sterne, als wir je z√§hlen k√∂nnten!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide7.png" class="img-fluid"></p>
<p>Es gibt sch√§tzungsweise 10^60 kleine organische Molek√ºle, die wir theoretisch herstellen k√∂nnten. Das ist eine <strong>1 mit 60 Nullen</strong>. Das entspricht so vielen Molek√ºlen, wie es Sandk√∂rner auf der Erde gibt‚Ä¶ multipliziert mit der Anzahl Planeten im bekannten Universum. Von diesen unermesslichen M√∂glichkeiten haben wir jedoch nur einen winzigen Bruchteil entdeckt oder hergestellt!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide2.png" class="img-fluid"></p>
<p>Im Anbetracht gegenw√§rtiger globaler Herausforderungen, f√ºr deren L√∂sung die Chemie eine zentrale Rolle spielt, m√ºssen einen Weg finden, die <strong>vielversprechendsten Galaxien und Sterne zu orten</strong>, um etwa den aktivsten Katalysator oder den besten chemischen Prozess zu finden - Und daf√ºr braucht es digitale Chemie!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide3.png" class="img-fluid"></p>
<p>Die traditionelle Chemie, wie wir sie kennen, ist oft langwierig und ressourcenintensiv. Forschende haben eine <strong>Idee</strong>, formulieren eine <strong>Hypothese</strong>, die mit einem <strong>experimentellen Setup</strong> getestet wird, man erh√§lt ein <strong>Resultat</strong>, extrahiert die <strong>Daten</strong>. Sehr h√§ufig werden basierend auf <strong>chemischer Intuition</strong> Annahmen getroffen, Hypothesen verfeinert, und der Loop nochmals gestartet. Und das hat uns bis dato sehr weit gebracht! Allerdings hat es sich auch herausgestellt, dass das nicht der effizienteste Weg ist, um die gesammelten Daten optimal zu nutzen‚Ä¶</p>
<p>Hier kommt die digitale Chemie ins Spiel ‚Äì basierend auf den Entwicklungen in <strong>Algorithmen, Modellen und gesteigerter Rechenleistung</strong> nutzt sie unter anderem maschinelles Lernen, um aus einem Meer von Daten aus Labor &amp; Literatur schnell und effizient neue Erkenntnisse zu gewinnen und chemische Probleme zu l√∂sen.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide4.png" class="img-fluid"></p>
<p>Eine Art, diese k√ºnstliche Intelligenz einzusetzen, sind Sprachmodelle, auch Large Language Models genannt. Bekannt wurden sie insbesondere durch Modelle wie ChatGPT, die in den letzten eineinhalb Jahren global Aufmerksamkeit erregt haben. Diese Modelle halten nicht nur in Chats Einzug, sondern auch in den Naturwissenschaften und Ingenieurwissenschaften.</p>
<p>Man kann die Chemie n√§mlich als Sprache verstehen! Im weitesten Sinne verarbeiten und generieren Sprachmodelle Text, beispielsweise in der √úbersetzung von Texten, oben gezeigt vom Franz√∂sischen ins Deutsche. In der Chemie, also hier auf Molek√ºle umgem√ºnzt, kann man Sprachmodelle darauf trainieren, die Ausgangsstoffe in Produkte zu √ºbersetzen, die Reaktionsprodukte vorherzusagen.</p>
<p>Ein Atom ist wie ein Buchstabe, ein Molek√ºl wie ein Wort, und eine Reaktion wie ein ganzer Satz. Der Input sind die Ausgangsmaterialien, oder die Anfrage, eines Users, der Output die Produkte. Diese Modelle wurden auf einem gigantischen Korpus and Text- und chemischen Daten trainiert und erm√∂glichen es uns so, auf neue Daten zu extrapolieren und neue Molek√ºle zu finden.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide5.png" class="img-fluid"></p>
<p>Auch in meiner aktuellen Forschung arbeite ich am Einsatz von Sprachmodellen f√ºr die Entwicklung von Katalysatoren zur Fixierung von Kohlenstoffdioxid, also CO2. Mit Hilfe von effizienten Katalysatoren k√∂nnten wir CO2 aus unserer Luft in wertvolle Chemikalien, die wir f√ºr unseren Alltag ben√∂tigen, und Treibstoffe umwandeln; Etwas, was f√ºr die Erstellung einer Kreislaufwirtschaft unerl√§sslich ist.</p>
<p>Es gibt eine Klasse von atomaren Katalysatoren (Single Atom Catalysts), die aus ausgekl√ºgelten Kombinationen von Metallen, Tr√§germaterialien und Liganden besteht. Neue solche Katalysatoren zu entdecken ist eine kombinatorische Herausforderung!</p>
<p>Wir machen uns hier die Tatsache zunutze, dass bereits mehrere Jahrzehnte lang umfangreiche Daten in Form von wissenschaftlichen Publikationen gesammelt wurden. Mit Hilfe eines Sprachmodells durchforsten wir mehrere tausend davon ‚Äì mehr, als ein Mensch je lesen k√∂nnte ‚Äì und extrahieren Informationen.</p>
<p>Unser Input (siehe Loop oben) ist in diesem Fall die Anfrage, einen Katalysator mit bestimmten Eigenschaften herstellen zu wollen. Beispielsweise m√∂chten wir billigere und h√§ufiger vorkommende Metalle verwenden, ein bestimmtes Tr√§germaterial oder m√∂glichst milde Reaktionsbedingungen. Zus√§tzlich wird das Modell mit einem riesigen Korpus an Literatur gef√ºttert. Der Output ist ein Rezept (Synthesevorschrift) zur Herstellung eines solchen Katalysators.</p>
<p>Dieses Kochrezept geben wir experimentellen Kollaboratoren an der ETH Z√ºrich, die das Experiment durchf√ºhren und uns Daten zukommen lassen, mit denen wir das Sprachmodell f√ºttern. Mit Optimierungsalgorithmen finden wir den n√§chstbesseren Katalysator, wodurch wir die Anzahl der notwendigen Schritte minimieren und die iterativ die Effizienz des Prozesses steigern.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/Slide6.png" class="img-fluid"></p>
<p>Eine zentrale, wenn nicht die gr√∂√üte <strong>Herausforderung</strong> unserer Forschung ist die Evaluation der Modelle auf Verl√§sslichkeit und ihre <strong>Generalisierbarkeit auf unbekannte Probleme</strong>. Jeder, der ChatGPT bereits verwendet hat, wei√ü, dass ein Sprachmodell immer eine Antwort gibt, die √ºberzeugend klingt. Die Frage ist nur, wie sehr k√∂nnen wir diesem Output trauen? K√∂nnen diese Modelle verl√§ssliche <strong>wissenschaftliche Tools</strong> sein? Wie k√∂nnen wir sicher sein, dass die Vorschl√§ge nicht nur theoretisch, sondern auch praktisch sinnvoll sind? Um diesen Aspekt anzugehen, arbeite ich momentan an einem <strong>Goldstandard</strong> (<em>Benchmark</em>), einem Datensatz, der dazu verwendet wird, die Schwachstellen dieser Sprachmodelle zu erkennen. Es ist entscheidend, das Potenzial, aber auch die Risiken dieser Technologien zu erkennen und verantwortungsvoll zu handhaben.</p>
<p>Ich habe Ihnen einen kleinen Einblick in meine Forschung gegeben, die symbolhaft daf√ºr steht, wie digitale Chemie dazu eingesetzt werden kann, Entwicklungsprozesse zu optimieren. Sie birgt das Potential, dieses <strong>gigantische Universum der Chemikalien</strong> zielstrebig zu erkunden! Das ist wichtig, um kosteng√ºnstige und nachhaltige Materialien zu entdecken. Das Feld steht f√ºr eine <strong>Synergie an Disziplinen</strong>, zwischen Expertenwissen, Algorithmen, Daten.</p>
<p>Ich freue mich darauf, diese bereichernde Arbeit fortzusetzen und danke meinen Kollaboratoren sowie Ihnen f√ºr die F√∂rderung durch das Exzellenzstipendium (ESOP Excellence Scholarship). In diesem Sinne: <em>Ad Astra</em>!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/ETH_ThanksGiving24_75.jpeg" class="img-fluid"></p>
<p><em>Photo Credits to ETH Foundation / Alessandro Della Bella. Special thanks to all my collaborators inside and outside ETH Zurich: Kjell Jorner (ETHZ), Stefan Schmid (ETHZ), Vignesh Somnath (ETHZ), Antonio Togni (ETHZ), Zachariah J. Berkson (University of Arizona), Christophe Cop√©ret (ETHZ), Benedikt Winter (ETHZ), Andr√© Bardow (ETHZ), Manu Suvarna (ETHZ), Javier P√©rez-Ram√≠rez (ETHZ), Andres M Bran (EPFL), Geemi Wellawatte (EPFL), Anna Borisova (EPFL), Bojana Rankovic (EPFL), Philippe Schwaller (EPFL).</em></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Klicken Sie <a href="https://bytesizedchem.substack.com/subscribe">hier</a>, um Updates √ºber neue Beitr√§ge zu erhalten.</p>
</div>
</div>



 ]]></description>
  <category>comment</category>
  <guid>https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/</guid>
  <pubDate>Thu, 20 Jun 2024 22:00:00 GMT</pubDate>
  <media:content url="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digitale_Chemie/images/ETH_ThanksGiving24_75.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ad Astra</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/</link>
  <description><![CDATA[ 





<p><em>The Annual ‚ÄúThanks Giving‚Äù Event by the ETH Foundation features young researchers and entrepreneurs who present their work in front of the donors. I had the honor to be invited to the 2024 edition and share some of my current research. A transcript of my talk.</em></p>
<p>Good evening, ladies and gentlemen. It is a great pleasure for me to share some of my <strong>research and passion</strong>, digital chemistry, with you today.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide1.png" class="img-fluid"> <em>Matterhorn bei Nacht. Bild von <a href="https://unsplash.com/@explorewithjoshua?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Explore with Joshua</a> auf <a href="https://unsplash.com/photos/snow-covered-mountain-under-blue-sky-during-night-time-4yBogrmcEmM?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash</a>.</em></p>
<p>Chemistry as we know it is an incredibly vast field that reaches into <strong>every area of our lives</strong>. We‚Äôre talking everything from the development of new medicines and renewable energy to materials for electronics, which allows me to project this presentation in front of you. There is also an enormous number of possible materials and molecules that we can produce: Imagine that the universe of chemistry is as vast as the night sky above us. There are many more stars than we could ever count!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide7.png" class="img-fluid"></p>
<p>There are an estimated 10^60 small organic molecules that we could theoretically make. That‚Äôs a <strong>1 with 60 zeros</strong>. That‚Äôs as many molecules as there are grains of sand on Earth‚Ä¶ multiplied by the number of planets in the known universe. However, we have only discovered or produced a tiny fraction of these immeasurable possibilities!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide2.png" class="img-fluid"></p>
<p>In view of the current global challenges that <strong>chemistry plays a central role</strong> in solving, we need to find a way to <strong>locate the most promising galaxies and stars</strong> in order to find the most active catalyst or the best chemical process - and that requires digital chemistry!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide3.png" class="img-fluid"></p>
<p>Traditional chemistry as we know it is often tedious and resource-intensive. Researchers have an <strong>idea</strong>, formulate a <strong>hypothesis</strong> that is tested with an <strong>experimental setup</strong>, a <strong>result</strong> is obtained and the <strong>data</strong> is extracted. Very often, assumptions are made based on chemical intuition, hypotheses are refined and the loop is started again. And that has got us very far so far! However, it has also turned out that this is not the most efficient way to make optimal use of the collected data‚Ä¶</p>
<p>This is where digital chemistry comes into play - based on the <strong>developments in algorithms, models and increased computing power</strong>, it uses machine learning, among other things, to quickly and efficiently gain new insights and solve chemical problems from an ‚Äúocean‚Äù of data from the lab &amp; literature.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide4.png" class="img-fluid"></p>
<p>One way of using this artificial intelligence is <strong>language models</strong>, also known as large language models. They have become particularly well known through models such as ChatGPT, which have attracted global attention in the last year and a half. These models are not only finding their way into chats, but also into the natural sciences and engineering.</p>
<p><strong>Chemistry can be understood as a language</strong>! In the broadest sense, language models process and generate text, for example in the translation of texts, as shown above from French into German (<em>slides all in German, sorry!</em>). In chemistry, here translated into molecules, language models can be trained to translate the starting materials into products, to predict the reaction products.</p>
<p>An <strong>atom</strong> is like a <strong>letter</strong>, a <strong>molecule</strong> like a <strong>word</strong>, and a <strong>reaction</strong> like a whole <strong>sentence</strong>. The input are the starting materials, or the request, of a user, the output are the products. These models have been trained on a gigantic corpus of text and chemical data, allowing us to extrapolate to new data and <strong>find new molecules</strong>.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide5.png" class="img-fluid"></p>
<p>In my current research, I am also working on the <strong>use of language models for the development of catalysts for the fixation of carbon dioxide</strong>, i.e.&nbsp;CO2. With the help of efficient catalysts, we could convert CO2 from our air into valuable chemicals that we need for our everyday lives and fuels; something that is essential for creating a circular economy.</p>
<p>There exists a class of <strong>atomic catalysts</strong> (<em>single atom catalysts</em>) that consists of sophisticated combinations of metals, support materials and ligands. Discovering new such catalysts is a combinatorial challenge! This is why we use Digital Chemistry.</p>
<p>We take advantage of the fact that extensive data has already been collected over several decades in the form of <strong>scientific publications</strong>. Using a language model, we sift through several thousand of them - more than a human could ever read - and extract information.</p>
<p>In this case, our input (<em>see loop above</em>) is the request to produce a catalyst with (<strong>certain properties</strong>). For example, we want to use cheaper and more abundant metals, a specific carrier material or reaction conditions that are as mild as possible. In addition, the model is fed with a huge body of literature. The output is a recipe (<em>synthesis procedure</em>) for the production of such a catalyst.</p>
<p>We give this recipe to experimental collaborators at ETH Zurich, who carry out the experiment and provide us with data to feed the language model. We use <strong>optimization algorithms</strong> to find the next best catalyst, thereby minimizing the number of necessary steps and iteratively increasing the efficiency of the process.</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/Slide6.png" class="img-fluid"></p>
<p>A central, if not the biggest challenge of our research is the evaluation of the models for <strong>reliability</strong> and their <strong>generalizability to unknown problems</strong>. Anyone who has used ChatGPT knows that a language model always gives an answer that sounds convincing. The question is, how much can we trust this output? Can these models be <strong>reliable scientific tools</strong>? How can we be sure that the suggestions are not only theoretically but also practically useful? To address this aspect, I am currently working on a <strong>gold standard</strong> (<em>benchmark</em>), a dataset that will be used to identify the weaknesses of these language models. It is crucial to recognize the potential but also the risks of these technologies and to handle them responsibly.</p>
<p>I have given you a small insight into my research, which is emblematic of how digital chemistry can be used to optimize development processes. It has the potential to purposefully <strong>explore this gigantic universe of chemicals</strong>! This is important in order to discover cost-effective and sustainable materials. The field stands for a <strong>synergy of disciplines</strong>, between expert knowledge, algorithms and data.</p>
<p>I look forward to continuing this enriching work and thank my collaborators and you for supporting me with the ESOP Excellence Scholarship. With this in mind: <strong>Ad Astra</strong>!</p>
<p><img src="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/ETH_ThanksGiving24_75.jpeg" class="img-fluid"></p>
<p><em>Photo Credits to ETH Foundation / Alessandro Della Bella. Special thanks to all my collaborators inside and outside ETH Zurich: Kjell Jorner (ETHZ), Stefan Schmid (ETHZ), Vignesh Somnath (ETHZ), Antonio Togni (ETHZ), Zachariah J. Berkson (University of Arizona), Christophe Cop√©ret (ETHZ), Benedikt Winter (ETHZ), Andr√© Bardow (ETHZ), Manu Suvarna (ETHZ), Javier P√©rez-Ram√≠rez (ETHZ), Andres M Bran (EPFL), Geemi Wellawatte (EPFL), Anna Borisova (EPFL), Bojana Rankovic (EPFL), Philippe Schwaller (EPFL).</em></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Subscribe <a href="https://bytesizedchem.substack.com/subscribe">here</a> to stay updated on coming posts.</p>
</div>
</div>



 ]]></description>
  <category>comment</category>
  <guid>https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/</guid>
  <pubDate>Thu, 20 Jun 2024 22:00:00 GMT</pubDate>
  <media:content url="https://bytesizedchem.com/posts/24-06-21_Ad_Astra_Digital_Chemistry/images/ETH_ThanksGiving24_75.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Every Voice Counts: Digital Chemistry and Chemical Education</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-05-24_DigChemEd/</link>
  <description><![CDATA[ 





<section id="a-flood-of-data" class="level2">
<h2 class="anchored" data-anchor-id="a-flood-of-data">A flood of data</h2>
<p>Each year, over 10‚Äô000 papers are published in the field of machine learning in chemistry, which equates to over 27 papers <em>per day</em> <span class="citation" data-cites="ben_blaiszik_2023_7713954"><em>(1)</em></span>. As of May 2024, GitHub hosts nearly <em>12‚Äô000</em> repositories featuring the term ‚Äúchemistry‚Äù. New chemicals are discovered at a rapid pace, pushing the boundaries of traditional laboratory practices through automation. As the field evolves, chemists need to handle large amounts of heterogeneous data.</p>
</section>
<section id="augmenting-chemistry-with-digital-tools" class="level2">
<h2 class="anchored" data-anchor-id="augmenting-chemistry-with-digital-tools">Augmenting Chemistry with Digital Tools</h2>
<p>Digital Chemistry is a young field that combines Computational Chemistry, Cheminformatics, Software Engineering and AI to accelerate the discovery of materials, apply machine learning methods to chemical problems and build actionable tools for researchers. As traditional chemistry emphasizes important hands-on synthetic and analytical methods, the recent digital shift requires strong skills in programming, navigating coding environments, data analysis, and developing reproducible machine learning pipelines. Critically assessing published works for reproducibility is essential, reflecting a broader trend of increasing retractions in scientific publishing <span class="citation" data-cites="Van_Noorden2023-qa"><em>(2)</em></span>.<sup>1</sup></p>
</section>
<section id="the-practical-implications" class="level2">
<h2 class="anchored" data-anchor-id="the-practical-implications">The Practical Implications</h2>
<p>Similar to wet-lab chemistry, expertise in programming grows with experience. Effective learning in this domain is achieved through hands-on projects, from academic coursework over research to personal mini-projects. Building a machine learning pipeline, for example, mirrors the process of planning and conducting a chemical synthesis.</p>
<p>The community is encouraged to embrace mentorship and foster an environment of support and openness. As chemists increasingly transition to computer science, they bring a dual perspective that enriches our approach to both fields. Our collective goal is to maximize the utility of data and algorithms, integrating them seamlessly with established chemical knowledge.</p>
<hr>
<p>In response to these needs, we have curated a comprehensive list of digital chemistry learning resources available on GitHub at <a href="https://github.com/mlederbauer/awesome-learning-digital-chemistry">mlederbauer/awesome-learning-digital-chemistry</a>, promoting open contribution and accessibility to all interested parties.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Subscribe <a href="https://bytesizedchem.substack.com/subscribe">here</a> to stay updated on coming posts.</p>
</div>
</div>
<div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-ben_blaiszik_2023_7713954" class="csl-entry">
1. Blaiszik, B. <span class="nocase">blaiszik/ml_publication_charts: AI/ML Publication Statistics for 2022</span>, 2023. doi:<a href="https://doi.org/10.5281/zenodo.7713954">10.5281/zenodo.7713954</a>.
</div>
<div id="ref-Van_Noorden2023-qa" class="csl-entry">
2. Van Noorden, R. More than 10,000 research papers were retracted in 2023 - a new record. <em>Nature</em> <strong>2023</strong>, <em>624</em>(7992), 479‚Äì481.
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Similar to the previous 10‚Äô000 papers being published in chemistry and ML each year, more than 10‚Äô000 papers were retracted <em>in 2023 alone</em>.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>comment</category>
  <guid>https://bytesizedchem.com/posts/24-05-24_DigChemEd/</guid>
  <pubDate>Fri, 24 May 2024 22:00:00 GMT</pubDate>
  <media:content url="https://bytesizedchem.com/posts/24-05-24_DigChemEd/thumbnail.png" medium="image" type="image/png" height="104" width="144"/>
</item>
<item>
  <title>Welcome To BSC!</title>
  <dc:creator>Magdalena Lederbauer</dc:creator>
  <link>https://bytesizedchem.com/posts/24-05-23_Welcome/</link>
  <description><![CDATA[ 





<p><img src="https://bytesizedchem.com/posts/24-05-23_Welcome/thumbnail.png" class="img-fluid"> <em>My two favorite colors and a drawing of me back when I was a full-on wetlab aficionada.</em></p>
<section id="welcome-to-bytzesizedchem" class="level1">
<h1>Welcome to BytzeSizedChem!</h1>
<p>Finally ‚Äì It has been a hot minute.</p>
<p>Hello there! I‚Äôm Magdalena, holding a BSc ETH in Chemistry (which is important for this blog‚Äôs acronym). I started BytzeSizedChem (BSC) with the goal of:</p>
<ul>
<li>Practicing a habit of consistent writing (it‚Äôs a muscle!),</li>
<li>Transitioning from ‚Äústudent‚Äù to ‚Äúresearcher‚Äù while remaining a life-long learner,</li>
<li>Building an atlas and community for digital chemists.</li>
</ul>
<p>I‚Äôm excited to share many ideas with you! Here, I aim to share ideas, findings, and discussions in a safe and open space.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Subscribe <a href="https://bytesizedchem.substack.com/subscribe">here</a> to get updates.</p>
</div>
</div>
<section id="some-upcoming-posts-include" class="level3">
<h3 class="anchored" data-anchor-id="some-upcoming-posts-include">Some upcoming posts include:</h3>
<ul>
<li>Coding Essentials for New Digital Chemists</li>
<li>Making of a Scientific Poster</li>
<li>AI is IN: Chemical Education with Digital Tools</li>
<li>ChatGPT goes Chemistry: Build your own Large Language Model Agent</li>
<li>Networking for Nerds</li>
</ul>
<p>This website contains detailed content, context, and code snippets. For short summaries and ‚Äì most importantly ‚Äì for staying updated about upcoming posts, check out my <a href="https://bytesizedchem.substack.com/subscribe">Substack</a>. You will be notified by updates right here, making it super easy to stay informed by subscribing.</p>
<p>If you have any ideas or content that you would like to have featured or discussed here, please don‚Äôt hesitate to reach out on <a href="twitter.com/maglederb">X</a>, <a href="linkedin.com/in/magdalena-lederbauer">LinkedIn</a> or <a href="mlederbauer@ethz.ch">email</a>. Any feedback or redistribution is highly appreciated!</p>
<p>Very much looking forward to this journey with you! Ad astra üöÄ‚ú®</p>


</section>
</section>

 ]]></description>
  <guid>https://bytesizedchem.com/posts/24-05-23_Welcome/</guid>
  <pubDate>Wed, 22 May 2024 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
